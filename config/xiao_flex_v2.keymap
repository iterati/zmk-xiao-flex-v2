/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    quick-tap-ms = <225>;
    flavor = "balanced";
    tapping-term-ms = <280>;
};

&mt {
    tapping-term-ms = <280>;
    quick-tap-ms = <225>;
    flavor = "balanced";
};

/ {
    behaviors {
        bro: bro {
            compatible = "zmk,behavior-tap-dance";
            label = "BRO";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>,
                <&kp LEFT_BRACKET>;

            tapping-term-ms = <300>;
        };

        brc: brc {
            compatible = "zmk,behavior-tap-dance";
            label = "BRC";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_BRACKET>;

            tapping-term-ms = <300>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 19 20 21 22 23 30 31 32 33 34 35 7 8 9 10 11 39 40 41 36 37 38 36 37 38 39 40 41 42 43 44 45>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 42 43 39 40 41 44 45>;
            hold-trigger-on-release;
        };

        hmls: hmls {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 19 20 21 22 23 30 31 32 33 34 35 7 8 9 10 11 39 40 41 36 37 38 36 37 38 39 40 41 42 43 44 45>;
            hold-trigger-on-release;
        };

        hmrs: hmrs {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 42 43 39 40 41 44 45>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        paro {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        veco {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 4>;
        };

        mapo {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <1 4>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <4 7>;
        };

        parc {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        vecc {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 9>;
        };

        mapc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 10>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <16 19>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <36 41>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <37 40>;
        };

        toggle_gaming {
            bindings = <&tog 1>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC  &kp Q        &kp W        &kp F         &kp P           &kp B      &kp J    &kp L           &kp U         &kp Y        &kp SEMI     &kp BSLH
&kp DQT  &hml LGUI A  &hml LALT R  &hml LCTRL S  &hmls LSHIFT T  &kp G      &kp M    &hmrs LSHIFT N  &hmr LCTRL E  &hmr LALT I  &hmr LGUI O  &kp SQT
&bro     &kp Z        &kp X        &kp C         &kp D           &kp V      &kp K    &kp H           &kp COMMA     &kp DOT      &kp FSLH     &brc
                                   &lt 2 BSPC    &lt 4 TAB       &kp ESC    &kp DEL  &lt 5 RET       &lt 3 SPACE
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E        &kp R      &kp T           &kp Y     &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D        &kp F      &kp G           &kp H     &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C        &kp V      &kp B           &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                         &lt 6 SPACE  &lt 7 RET  &kp LEFT_ALT    &kp LGUI  &kp ENTER  &kp SPACE
            >;
        };

        nav {
            bindings = <
&rgb_ug RGB_SPI  &none     &kp C_VOL_DN   &kp UP          &kp C_VOL_UP     &kp C_MUTE    &kp LS(LG(Z))  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(Z)  &none
&rgb_ug RGB_SPD  &kp LGUI  &mt LALT LEFT  &mt LCTRL DOWN  &mt LSHFT RIGHT  &none         &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS   &none
&none            &none     &none          &none           &none            &none         &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &kp DEL    &none
                                          &none           &none            &none         &kp BSPC       &kp RET    &kp SPACE
            >;
        };

        num {
            bindings = <
&rgb_ug RGB_TOG  &kp LBKT       &kp N7  &kp N8  &kp N9     &kp RBKT      &kp LG(LS(Z))  &kp LG(X)       &kp LG(C)     &kp LG(V)       &kp LG(Z)  &none
&rgb_ug RGB_EFF  &kp SEMICOLON  &kp N4  &kp N5  &kp N6     &kp EQUAL     &kp LEFT       &mt LSHFT DOWN  &mt LCTRL UP  &mt LALT RIGHT  &kp LGUI   &none
&rgb_ug RGB_HUI  &kp GRAVE      &kp N1  &kp N2  &kp N3     &kp BSLH      &kp HOME       &kp PG_DN       &kp PG_UP     &kp END         &none      &none
                                        &kp N0  &kp MINUS  &kp PERIOD    &none          &none           &none
            >;
        };

        mouse {
            bindings = <
&none  &none     &none     &none      &none      &none    &kp LS(LG(Z))  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(Z)  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT  &none      &none
&none  &none     &none     &none      &none      &none    &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &none      &none
                           &none      &none      &none    &mkp LCLK      &mkp RCLK  &mkp MCLK
            >;
        };

        fn {
            bindings = <
&none            &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN    &kp LG(LS(Z))  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(Z)  &none
&rgb_ug RGB_BRI  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK     &none          &kp LSHFT  &kp LCTRL  &kp LALT   &kp LGUI   &none
&rgb_ug RGB_BRD  &kp F10  &kp F1  &kp F2  &kp F3  &none        &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &none      &none
                                  &none   &none   &none        &none          &none      &none
            >;
        };

        gaming_num {
            bindings = <
&kp F4     &kp F1  &kp N7        &kp N8        &kp N9        &kp EQUAL       &none  &none  &none  &none  &none  &none
&kp LCTRL  &kp F2  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp NUMBER_0    &none  &none  &none  &none  &none  &none
&kp LSHFT  &kp F3  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD      &none  &none  &none  &none  &none  &none
                                 &none         &none         &none           &none  &none  &none
            >;
        };

        gaming_nav {
            bindings = <
&kp ESC    &kp F5    &kp PG_DN  &kp UP    &kp PG_UP  &kp C_MUTE      &none  &none  &none  &none  &none  &none
&kp TAB    &kp F6    &kp LEFT   &kp DOWN  &kp RIGHT  &kp C_VOL_UP    &none  &none  &none  &none  &none  &none
&kp LSHFT  &kp LALT  &kp END    &kp RET   &kp HOME   &kp C_VOL_DN    &none  &none  &none  &none  &none  &none
                                &none     &none      &none           &none  &none  &none
            >;
        };
    };
};

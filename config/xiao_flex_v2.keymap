/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        gameon: gaming_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 5 &rgb_ug RGB_COLOR_HSB(0,93,30)>;
            label = "GAMING_LAYER";
        };
    };

    behaviors {
        bro: bro {
            compatible = "zmk,behavior-tap-dance";
            label = "BRO";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>,
                <&kp LEFT_BRACKET>;

            tapping-term-ms = <300>;
        };

        brc: brc {
            compatible = "zmk,behavior-tap-dance";
            label = "BRC";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_BRACKET>;

            tapping-term-ms = <300>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 19 20 21 22 23 30 31 32 33 34 35 7 8 9 10 11 39 40 41 36 37 38 36 37 38 39 40 41 42 43 44 45>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 42 43 39 40 41 44 45>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        capsword {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        paro {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 20>;
        };

        veco {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <14 21>;
        };

        mapo {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC  &kp Q            &kp W            &kp F         &kp P              &kp B              &kp J       &kp L              &kp U         &kp Y            &kp SEMI         &kp BSLH
&kp DQT  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G              &kp M       &hmr LEFT_SHIFT N  &hmr LCTRL E  &hmr LEFT_ALT I  &hmr LEFT_GUI O  &kp SQT
&bro     &kp Z            &kp X            &kp C         &kp D              &kp V              &kp K       &kp H              &kp COMMA     &kp DOT          &kp FSLH         &brc
                                           &kp ESC       &lt 3 TAB          &lt 4 BACKSPACE    &caps_word  &lt 2 RET          &lt 1 SPACE
            >;
        };

        num {
            bindings = <
&rgb_ug RGB_TOG  &kp LBKT       &kp N7  &kp N8   &kp N9     &kp RBKT     &kp LG(LS(Z))  &kp LG(X)       &kp LG(C)     &kp LG(V)       &kp LG(Z)  &none
&rgb_ug RGB_EFF  &kp SEMICOLON  &kp N4  &kp N5   &kp N6     &kp EQUAL    &kp LEFT       &mt LSHFT DOWN  &mt LCTRL UP  &mt LALT RIGHT  &kp LGUI   &none
&rgb_ug RGB_HUI  &kp GRAVE      &kp N1  &kp N2   &kp N3     &kp BSLH     &kp HOME       &kp PG_DN       &kp PG_UP     &kp END         &kp CAPS   &none
                                        &kp DOT  &kp MINUS  &kp N0       &none          &none           &none
            >;
        };

        fn {
            bindings = <
&gameon          &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN    &kp LG(LS(Z))  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(Z)     &none
&rgb_ug RGB_BRI  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK     &none          &kp LSHFT  &kp LCTRL  &kp LALT   &kp LEFT_GUI  &none
&rgb_ug RGB_BRD  &kp F10  &kp F1  &kp F2  &kp F3  &none        &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &none         &none
                                  &none   &none   &none        &none          &none      &none
            >;
        };

        mouse {
            bindings = <
&none  &none     &none     &none      &none      &rgb_ug RGB_TOG    &kp LS(LG(Z))  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(Z)  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none              &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT  &none      &none
&none  &none     &none     &none      &none      &none              &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &none      &none
                           &none      &none      &none              &mkp LCLK      &mkp RCLK  &mkp MCLK
            >;
        };

        layer_4 {
            bindings = <
&rgb_ug RGB_SPI  &none     &kp C_VOL_DN   &kp UP          &kp C_VOL_UP     &kp C_MUTE    &kp LS(LG(Z))  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(Z)  &none
&rgb_ug RGB_SPD  &kp LGUI  &mt LALT LEFT  &mt LCTRL DOWN  &mt LSHFT RIGHT  &none         &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS   &none
&none            &none     &none          &none           &none            &none         &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &kp DEL    &none
                                          &none           &none            &none         &kp SPACE      &kp RET    &kp BSPC
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R      &kp T       &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F      &kp G       &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp CAPS
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B       &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &to 0
                         &kp SPACE  &kp LCTRL  &kp LALT    &kp SPACE  &kp ENTER  &kp LGUI
            >;
        };
    };
};
